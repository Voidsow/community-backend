<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.voidsow.community.backend.mapper.CustomChatMapper">
    <resultMap id="conversations" type="com.voidsow.community.backend.dto.Conversation">
        <result property="last.id" column="last"/>
        <result property="count" column="count"/>
        <result property="unread" column="unread" javaType="int"/>
    </resultMap>

    <select id="getConversations" resultMap="conversations">
        # Mybatis会将sum()的结果映射为BigDecimal,需要手动配置映射结果
        select max(id)                                         as last,
               count(*)                                        as count,
               max(gmt_create)                                 as lastTime,
               sum(if(status = 0 and listener = #{uid}, 1, 0)) as unread
        from chat
        where status != 2
          and (speaker = #{uid} or listener = #{uid} and speaker != 1)
        group by conversation_id
        order by unread desc, lastTime desc;
    </select>

    <select id="countConversations" resultType="int">
        select count(distinct conversation_id)
        from chat
        where status != 2
          and (speaker = #{uid} or listener = #{uid} and speaker != 1)
    </select>

    <select id="getConversation" resultType="com.voidsow.community.backend.entity.Chat">
        select *
        from chat
        where conversation_id = #{conversationId}
        and status != 2
        order by id
        <if test="offset!=null">
            limit #{offset},#{limit}
        </if>
    </select>
    <select id="countConversation" resultType="int">
        select count(*)
        from chat
        where conversation_id = #{conversationId}
          and status != 2
    </select>

    <update id="updateMsgStatus">
        update chat
        set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="getNotifications" resultType="Chat">
        select *
        from chat
        where listener = #{uid}
          and conversation_id = #{type};
    </select>
</mapper>
